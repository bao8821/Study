#define _CRT_SECURE_NO_WARNINGS 1 

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct stu
{
	char name[20];
	int age;
};

//void bubble_sort(int arr[], int sz)//自定义冒泡排序函数
//{
//	int i = 0;
//	for(i=0;i<sz-1;i++)
//	{ 
//		int j = 0;
//		for (j = 0; j < sz - 1 - i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//			}
//		}
//	}
//}

void swp(char* buf1, char* buf2, int width) 
{
	int i = 0;
	for (i = 0; i < width; i++)
	{
		int tmp = *(buf1 + i);
		*(buf1 + i) = *(buf2 + i);
		*(buf2 + i) = tmp;
	}
}
void bubble_sort(void* base, int sz, int width, int (*cmp)(void* e1, void* e2)) 
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++)
		{
			if (cmp((char*)base + j * width, (char*)base + (j + 1) * width)>0)
			{
				swp((char*)base + j * width, (char*)base + (j + 1) * width,width);
			}
		}
	}

}

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_float(const void* e1, const void* e2)
{
	if (*(float*)e1 == *(float*)e2)
	{
		return 0;
	}
	else if(*(float*)e1 < *(float*)e2)
	{
		return -1;
	}
	else 
	{
		return 1;
	}
	//return (int)(*(float*)e1 - *(float*)e2);
}

int cmp_stu_by_age(const void* e1, const void* e2)
{
	return ((struct stu*)e1)->age - ((struct stu*)e2)->age;
}

int cmp_stu_by_name(const void* e1, const void* e2)
{
	return strcmp(((struct stu*)e1)->name,((struct stu*)e2)->name);
}


void test1()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	//bubble_sort(arr, sz);//调用自定义冒泡排序函数
	qsort(arr, sz, sizeof(arr[0]), cmp_int);//调用库函数快速排序int数据
	for (i = 0; i < 10; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
}

void test2()
{
	float farr[] = { 9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0,0 };
	int sz = sizeof(farr) / sizeof(farr[0]);
	int i = 0;
	qsort(farr, sz, sizeof(farr[0]), cmp_float);//调用库函数快速排序float数据
	for (i = 0; i < 10; i++)
	{
		printf("%f ", farr[i]);
	}
	printf("\n");
}

void test3()
{
	struct stu sarr[] = { {"zhang",20},{"li",30} ,{"wang",10} };
	int sz = sizeof(sarr) / sizeof(sarr[0]);
	qsort(sarr, sz, sizeof(sarr[0]), cmp_stu_by_name);//调用库函数快速排序struct数据	
	int i = 0;
	for (i = 0; i < 3; i++)
	{
		printf("%s %d ", sarr[i].name, sarr[i].age);
	}
	printf("\n");
	qsort(sarr, sz, sizeof(sarr[0]), cmp_stu_by_age);
	for (i = 0; i < 3; i++)
	{
		printf("%s %d ", sarr[i].name, sarr[i].age);
	}
	printf("\n");
}

void test4()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);
	for (i = 0; i < 10; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
}

int main()
{
	test1();
	test2();
	test3();
	test4();
	return 0;
}
